apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: demo-backend
  name: demo-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-backend
  strategy:
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: demo-backend
    spec:
      containers:
        - image: sentientmonkey/hello
          name: hello
          livenessProbe:
            httpGet:
              path: /healthy
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 10
            failureThreshold: 3
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: demo-frontend
  name: demo-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-frontend
  strategy:
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: demo-frontend
    spec:
      containers:
        - image: sentientmonkey/hello-frontend
          name: hello-frontend
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            timeoutSeconds: 10
            failureThreshold: 3
          ports:
            - containerPort: 80
              name: http
              protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: demo-backend
  name: demo-backend
spec:
  ports:
    - name: 8080-8080
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: demo-backend
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: demo-frontend
  name: demo-frontend
spec:
  ports:
    - name: 3000-80
      port: 3000
      protocol: TCP
      targetPort: 80
  selector:
    app: demo-frontend
  type: LoadBalancer
